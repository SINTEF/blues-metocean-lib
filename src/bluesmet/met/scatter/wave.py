# This an autogenerated file
# Description for stochastic process at a sector.
# Generated with Wave
from typing import Dict,Sequence,List
from dmt.blueprint import Blueprint
from .blueprints.wave import WaveBlueprint
from numpy import ndarray,asarray
from dmt.namedentity import NamedEntity

class Wave(NamedEntity):
    """
    Description for stochastic process at a sector.
    Keyword arguments
    -----------------
    description : str
         (default "")
    name : str
         (default None)
    occurence : ndarray
         the scatter data for occurrence of Hs-Tp.
    """

    def __init__(self , description="", **kwargs):
        super().__init__(**kwargs)
        self.description = description
        self.name = None
        self.occurence = ndarray(2)
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return WaveBlueprint()


    @property
    def description(self) -> str:
        """"""
        return self.__description

    @description.setter
    def description(self, value: str):
        """Set description"""
        self.__description = value

    @property
    def name(self) -> str:
        """"""
        return self.__name

    @name.setter
    def name(self, value: str):
        """Set name"""
        self.__name = value

    @property
    def occurence(self) -> ndarray:
        """the scatter data for occurrence of Hs-Tp."""
        return self.__occurence

    @occurence.setter
    def occurence(self, value: ndarray):
        """Set occurence"""
        self.__occurence = asarray(value)
